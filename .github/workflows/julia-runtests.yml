name: Run tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    env:
            LD_LIBRARY_PATH: ${{ github.workspace }}/lib:/usr/lib:/lib:/lib64
    strategy:
      matrix:
        julia-version: ['1', 'nightly']
        julia-arch: [x64]
        os: [ubuntu-latest, macOS-latest, Windows-latest]
        exclude:
          - os: macOS-latest
            julia-arch: x86

    steps:
      - uses: julia-actions/setup-julia@latest
        with:
           version: ${{ matrix.julia-version }}
      - name: Build package
        run:  |
                julia --project -e 'using Pkg; Pkg.instantiate(); Pkg.status();'
      - name: Run test no coverage
        uses: julia-actions/julia-runtest@latest
        with:
                coverage: 'false'
      - name: Do the coverage run
        if: matrix.julia-version == '1' && matrix.julia-arch == 'x64' && matrix.os == 'ubuntu-latest'
        uses: julia-actions/julia-runtest@latest
      - name: Process the coverage run
        if: matrix.julia-version == '1' && matrix.julia-arch == 'x64' && matrix.os == 'ubuntu-latest'
        run: |
                       julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; LCOV.writefile("lcov.info",process_folder())'
      - name: Upload coverage data
        if: matrix.julia-version == '1' && matrix.julia-arch == 'x64' && matrix.os == 'ubuntu-latest'
        uses: coverallsapp/github-action@master
        with:
              github-token: ${{ secrets.GITHUB_TOKEN }}
              path-to-lcov: './lcov.info'
      - name: Build documentation
        if: matrix.julia-version == '1' && matrix.julia-arch == 'x64' && matrix.os == 'ubuntu-latest'
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
        run: |
           julia --project=docs/ -e 'using Pkg; Pkg.instantiate()'
           julia --project=docs/ docs/make.jl
