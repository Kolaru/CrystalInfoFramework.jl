const _cif2_grammar_spec = raw"""
COMMENT : /(#.*[\n\r](?!;))|(#.*)/
WHITESPACE :  /([ \t\n\r](?!;))|[ \t]/
%ignore COMMENT
%ignore WHITESPACE

LEFTBRACE : "{"
RIGHTBRACE : "}"
LSQUAREB : "["
RSQUAREB : "]"
COMMA : ","
COLON : ":"
SEMI : ";"

NODELIM_DATA_VALUE : /((?!(((S|s)(A|a)(V|v)(E|e)_[^\s]*)|((G|g)(L|l)(O|o)(B|b)(A|a)(L|l)_[^\s]*)|((S|s)(T|t)(O|o)(P|p)_[^\s]*)|((D|d)(A|a)(T|t)(A|a)_[^\s]*)))[^\s\"#$'_\{\}\[\]][^\s\{\}\[\]]*)/
LBLOCK : "loop_"i     
GLOBAL : "global_"i
STOP : "stop_"i
SAVE_HEADING : /(S|s)(A|a)(V|v)(E|e)_[][!%&\(\)*+,.\/:<=>?@0-9A-Za-z\\\\^`{}\|~\"#$';_\u00A0-\uD7FF\uE000-\uFDCF\uFDF0-\uFFFD\U00010000-\U0001FFFD\U00020000-\U0002FFFD\U00030000-\U0003FFFD\U00040000-\U0004FFFD\U00050000-\U0005FFFD\U00060000-\U0006FFFD\U00070000-\U0007FFFD\U00080000-\U0008FFFD\U00090000-\U0009FFFD\U000A0000-\U000AFFFD\U000B0000-\U000BFFFD\U000C0000-\U000CFFFD\U000D0000-\U000DFFFD\U000E0000-\U000EFFFD\U000F0000-\U000FFFFD\U00100000-\U0010FFFD-]+/
SAVE_END : "save_"i
DATA_NAME : /_[][!%&\(\)*+,.\/:<=>?@0-9A-Za-z\\\\^`{}\|~\"#$';_\u00A0-\uD7FF\uE000-\uFDCF\uFDF0-\uFFFD\U00010000-\U0001FFFD\U00020000-\U0002FFFD\U00030000-\U0003FFFD\U00040000-\U0004FFFD\U00050000-\U0005FFFD\U00060000-\U0006FFFD\U00070000-\U0007FFFD\U00080000-\U0008FFFD\U00090000-\U0009FFFD\U000A0000-\U000AFFFD\U000B0000-\U000BFFFD\U000C0000-\U000CFFFD\U000D0000-\U000DFFFD\U000E0000-\U000EFFFD\U000F0000-\U000FFFFD\U00100000-\U0010FFFD-]+/ //_followed by stuff
DATA_HEADING : /(D|d)(A|a)(T|t)(A|a)_[][!%&\(\)*+,.\/:<=>?@0-9A-Za-z\\\\^`{}\|~\"#$';_\u00A0-\uD7FF\uE000-\uFDCF\uFDF0-\uFFFD\U00010000-\U0001FFFD\U00020000-\U0002FFFD\U00030000-\U0003FFFD\U00040000-\U0004FFFD\U00050000-\U0005FFFD\U00060000-\U0006FFFD\U00070000-\U0007FFFD\U00080000-\U0008FFFD\U00090000-\U0009FFFD\U000A0000-\U000AFFFD\U000B0000-\U000BFFFD\U000C0000-\U000CFFFD\U000D0000-\U000DFFFD\U000E0000-\U000EFFFD\U000F0000-\U000FFFFD\U00100000-\U0010FFFD-]+/
START_SC_LINE : /(\n|\r\n);([^\n\r])*(\r\n|\r|\n)+/
SC_LINE_OF_TEXT : /[^;\r\n]([^\r\n])*(\r\n|\r|\n)+/
TRIPLE_QUOTE_DATA_VALUE.2 : /(?s)'''.*?'''|\"\"\".*?\"\"\"/
SINGLE_QUOTE_DATA_VALUE.1 : /'([^\n\r\f'])*'|\"([^\n\r\"])*\"+/
DATA_VALUE_INTERNAL_SQ: /\[([^\s\[\]]*)\]/

// We create the "bare" production so that our transformer can
// intercept non-delimited period and question mark

input : dblock* 
dblock : DATA_HEADING block_content* 
block_content : data | save_frame 
save_frame : SAVE_HEADING data* SAVE_END 
data : scalar_item | loop 
scalar_item : DATA_NAME data_value 
loop : LBLOCK DATA_NAME+ data_value+ 
data_value : quoted_string | bare | semi_string | list | table
bare: NODELIM_DATA_VALUE
list : LSQUAREB data_value* RSQUAREB 
table : LEFTBRACE table_entry* RIGHTBRACE 
table_entry : (SINGLE_QUOTE_DATA_VALUE | TRIPLE_QUOTE_DATA_VALUE ) ":" data_value 
quoted_string : SINGLE_QUOTE_DATA_VALUE | TRIPLE_QUOTE_DATA_VALUE
semi_string : START_SC_LINE SC_LINE_OF_TEXT* SEMI 

"""

